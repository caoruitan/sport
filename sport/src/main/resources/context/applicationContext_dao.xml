<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" default-lazy-init="false"> 
    
	<!-- 指向数据库配置文件（切换数据库）properties文件内容作为键值对放在上下文环境中，上下文可直接使用${key} -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/init/mysql.properties</value>
			</list>
		</property>
	</bean>
    
    
	<!--阿里数据库连接配置-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" /> 
		<property name="maxActive" value="${jdbc.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<!--申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。-->
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!--密码回调函数-->
		<!--解决回调为空的问题-->
		<property name="connectionProperties" value="password=${jdbc.password}"/>
		<property name="passwordCallback" ref="dbPasswordCallback"/>
		<!--加密方式-->
		<!--java -cp D:/druid-1.0.26.jar com.alibaba.druid.filter.config.ConfigTools 用户名/密码-->
		<!--数据库用户密码加密-->
		<!--
				<property name="filters" value="config" />
				<property name="connectionProperties" value="config.decrypt=true" />
			-->
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小,PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。 -->
		<!-- 
			<property name="poolPreparedStatements" value="true" />
			<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
			-->
		<!-- 配置监控统计拦截的filters -->
		<!--<property name="filters" value="stat" />-->
	</bean>
    
    
	<!-- 数据源 dbcp -->
	<!--
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName" value="${jdbc.driverClassName}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="maxActive" value="${jdbc.maxActive}"/>  
			<property name="minIdle" value="${jdbc.minIdle}"/>
			<property name="maxIdle" value="${jdbc.maxIdle}"/>
			<property name="initialSize" value="${jdbc.initialSize}"/>
			<property name="logAbandoned" value="${jdbc.logAbandoned}"/>
			<property name="removeAbandoned"  value="${jdbc.removeAbandoned}"/>
			<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
			<property name="maxWait" value="${jdbc.maxWait}"/>
			<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
			<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}"/>
			<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
			<property name="validationQuery" value="SELECT 1 FROM DUAL"/>
		</bean>
		-->
    
	<!-- Session Factory -->
	<bean id="sessionFactory" class ="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>
			</props>
		</property>
		<property name="packagesToScan" value="org.cd.sport.domain"/>
	</bean>
    
	<!-- 支持事物操作 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
    
	<!-- 使用注解控制事物 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
    
	<!-- HIBERNATE DAO 模板 -->
	<!-- <bean class="org.springframework.orm.hibernate4.HibernateTemplate">
				<property name="sessionFactory" ref="sessionFactory"/>
		   </bean>  -->
    
</beans>
